type MemPoolTx {
  from: String!
  gas: String!
  gasPrice: String!
  hash: String!
  input: String!
  nonce: String!
  to: String!
  value: String!
  v: String!
  r: String!
  s: String!
  pendingFor: String!
  queuedFor: String!
  pool: String!
}

type Query {
  pendingForMoreThan(x: String!): [MemPoolTx!]!
  pendingForLessThan(x: String!): [MemPoolTx!]!

  queuedForMoreThan(x: String!): [MemPoolTx!]!
  queuedForLessThan(x: String!): [MemPoolTx!]!

  pendingFrom(addr: String!): [MemPoolTx!]!
  pendingTo(addr: String!): [MemPoolTx!]!

  queuedFrom(addr: String!): [MemPoolTx!]!
  queuedTo(addr: String!): [MemPoolTx!]!

  topXPendingWithHighGasPrice(x: Int!): [MemPoolTx!]!
  topXQueuedWithHighGasPrice(x: Int!): [MemPoolTx!]!

  topXPendingWithLowGasPrice(x: Int!): [MemPoolTx!]!
  topXQueuedWithLowGasPrice(x: Int!): [MemPoolTx!]!

  pendingDuplicates(hash: String!): [MemPoolTx!]!
  queuedDuplicates(hash: String!): [MemPoolTx!]!
}

type Subscription {
  newPendingTx: MemPoolTx!
  newQueuedTx: MemPoolTx!

  newConfirmedTx: MemPoolTx!
  newUnstuckTx: MemPoolTx!

  newPendingTxFrom(address: String!): MemPoolTx!
  newQueuedTxFrom(address: String!): MemPoolTx!

  newConfirmedTxFrom(address: String!): MemPoolTx!
  newUnstuckTxFrom(address: String!): MemPoolTx!

  newPendingTxTo(address: String!): MemPoolTx!
  newQueuedTxTo(address: String!): MemPoolTx!

  newConfirmedTxTo(address: String!): MemPoolTx!
  newUnstuckTxTo(address: String!): MemPoolTx!
}
